# -*- org -*-
#+TITLE: Notes on Haskell
#+COLUMNS: %8TODO %10WHO %3PRIORITY %3HOURS(HRS) %80ITEM
#+OPTIONS: author:nil creator:t H:9
#+HTML_HEAD: <link href="https://fonts.googleapis.com/css?family=IBM+Plex+Mono|IBM+Plex+Sans" rel="stylesheet">
#+HTML_HEAD: <link href="/org-mode.css" rel="stylesheet" type="text/css">
#+HTML_HEAD: <link href="/styles/toc.css" rel="stylesheet" type="text/css">
#+HTML_HEAD: <script src="/scripts/jquery-3.3.1.js" type="text/javascript"></script>
#+HTML_HEAD: <script src="/scripts/toc-manipulation.js" type="text/javascript"></script>

Various notes on various Haskell things, as I climb my Mt. Everest and pursue my Moby Dick.

* Books

- [[http://learnyouahaskell.com/][Learn You a Haskell for Great Good!]] :: This is a great book, light-hearted and yet solid.  When I
     refer to /Learn You a Haskell/, this is the book I'm referring to.
- [[http://book.realworldhaskell.org/][Real World Haskell]] :: Another good book that I've tried to work my way through but got lost.  I
     plan to get back to it when I finish /Learn You a Haskell/.

* Pages
  
# Links must be relative.

  - [[file:zippers.org][zippers.org]] :: (in progress) On creating a Zipper data structure in Haskell

  - [[file:write-a-haskell-program.org][write-a-haskell-program.org]] :: Notes on writing a program (or service), now that I've finally
       finished /Learn You a Haskell/.

  - [[file:../Orgzly/monad-journey.html][../Orgzly/monad-journey.html]] :: Resuming My Journey Toward an Understanding of Haskell Monads
       (Yet Again).  This is basically my notes file as I fight my way through the last three
       chapters of /Learn You a Haskell/.

  - [[file:beginners-guide-to-haskell.org][beginners-guide-to-haskell.org]] :: Because why not?

  - [[file:KnightMoves.pdf][KnightMoves.pdf]] :: A writeup of my attempt to decipher what's going in the /Learn You a Haskell/
       section named "A knight's quest" treating =List= as a monad in determining where a chess
       knight can move.

  - [[file:applicative-monad.org][applicative-monad.org]] :: Exercise in getting Pierre to walk a tightrope from /Learn You a
       Haskell/, based on an offhand comment in the text about not being able to do it with just
       applicative functors.

  - [[file:haskell-newtype-errors.org][haskell-newtype-errors.org]] :: Definition of "Functor" (Notes on Errors Encountered While Trying
       to Use Newtype to Declare a Type an Instance of Functor)
